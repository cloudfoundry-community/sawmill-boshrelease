user vcap;

worker_processes <%= p("sawmill.nginx.worker_processes") %>;
daemon off;

error_log /var/vcap/sys/log/sawmill/nginx.error.log;
events {
    use epoll;
    worker_connections <%= p("sawmill.nginx.worker_connections") %>;
}

http {
    push_stream_shared_memory_size 512M;
    push_stream_message_ttl 5;

    access_log /var/vcap/sys/log/sawmill/nginx.access.log;

    server {
        listen <%= p('sawmill.nginx.port') %>;
        server_name _;

        ssl on;
        ssl_prefer_server_ciphers on;
        ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers               ECDHE-RSA-AES128-SHA256:AES128-GCM-SHA256:HIGH:!MD5:!aNULL:!EDH;
        ssl_certificate           /var/vcap/jobs/sawmill/config/ssl/ssl_crt;
        ssl_certificate_key       /var/vcap/jobs/sawmill/config/ssl/ssl_key;
        ssl_session_timeout       <%= p('sawmill.nginx.ssl_timeout') %>;
        add_header                Strict-Transport-Security max-age=15768000;

        location / {
            auth_basic "Sawmill <%= spec.deployment %>";
            auth_basic_user_file /var/vcap/jobs/sawmill/config/sawmill.htpass;
            push_stream_subscriber;
            push_stream_channels_path logs;
            push_stream_message_template ~text~\n;
            add_header Content-Type text/plain;
        }

        location /ws/ {
            auth_basic "Sawmill <%= spec.deployment %>";
            auth_basic_user_file /var/vcap/jobs/sawmill/config/sawmill.htpass;
            push_stream_subscriber websocket;
            push_stream_websocket_allow_publish off;
            push_stream_ping_message_interval 10s;
            push_stream_channels_path logs;
            push_stream_message_template ~text~\n;
        }

        location /publish {
<% link('sawmill').instances.each do |server| %>
            allow <%= server.address %>;
<% end %>
            allow 127.0.0.1;
            deny all;
            push_stream_publisher admin;
            push_stream_channels_path logs;
            push_stream_store_messages on;
        }
    }
}

stream {
    server {
        listen     <%= p("sawmill.syslog.port") %>;
        proxy_pass syslog_tcp_backend;
    }

    upstream syslog_tcp_backend {
        zone tcp_syslog 64k;
<% link('sawmill').instances.each do |server| %>
        server <%= server.address %>:1514;
<% end %>
    }
}
